<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-10T08:57:58 IST" name="Suite" finished-at="2025-02-10T08:58:58 IST" duration-ms="59733">
    <groups>
    </groups>
    <test started-at="2025-02-10T08:57:58 IST" name="Test" finished-at="2025-02-10T08:58:58 IST" duration-ms="59733">
      <class name="testCases.WishlistTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.WishlistTest@683dbc2c]" started-at="2025-02-10T08:58:22 IST" name="setup" finished-at="2025-02-10T08:58:28 IST" duration-ms="6457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddToWishlist()[pri:0, instance:testCases.WishlistTest@683dbc2c]" started-at="2025-02-10T08:58:28 IST" name="testAddToWishlist" finished-at="2025-02-10T08:58:29 IST" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToWishlist -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.WishlistTest@683dbc2c]" started-at="2025-02-10T08:58:29 IST" name="tearDown" finished-at="2025-02-10T08:58:30 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.WishlistTest -->
      <class name="testCases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginTest@68267da0]" started-at="2025-02-10T08:58:30 IST" name="setup" finished-at="2025-02-10T08:58:37 IST" duration-ms="6680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_login_account()[pri:0, instance:testCases.LoginTest@68267da0]" started-at="2025-02-10T08:58:37 IST" name="verify_login_account" finished-at="2025-02-10T08:58:39 IST" duration-ms="2098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login_account -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginTest@68267da0]" started-at="2025-02-10T08:58:39 IST" name="tearDown" finished-at="2025-02-10T08:58:40 IST" duration-ms="765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.LoginTest -->
      <class name="testCases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SearchTest@6ff29830]" started-at="2025-02-10T08:58:49 IST" name="setup" finished-at="2025-02-10T08:58:56 IST" duration-ms="7377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSearchProduct()[pri:0, instance:testCases.SearchTest@6ff29830]" started-at="2025-02-10T08:58:56 IST" name="testSearchProduct" finished-at="2025-02-10T08:58:57 IST" duration-ms="574" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
at pageObjects.SearchPage.setsearchproduct(SearchPage.java:21)
at testCases.SearchTest.testSearchProduct(SearchTest.java:13)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SearchTest@6ff29830]" started-at="2025-02-10T08:58:57 IST" name="tearDown" finished-at="2025-02-10T08:58:58 IST" duration-ms="1001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.SearchTest -->
      <class name="testCases.CheckoutTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.CheckoutTest@2638011]" started-at="2025-02-10T08:58:40 IST" name="setup" finished-at="2025-02-10T08:58:47 IST" duration-ms="7017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCheckoutProcess()[pri:0, instance:testCases.CheckoutTest@2638011]" started-at="2025-02-10T08:58:47 IST" name="testCheckoutProcess" finished-at="2025-02-10T08:58:48 IST" duration-ms="1155" status="FAIL">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=133.0.6943.59)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [82e7f39fe0f13d2bd179643cfebf6d87, findElement {using=css selector, value=//body/div[@id='root']/div[@class='header__container']/div[@class='nav__top__container']/div[@class='top__container']/div[@class='control__bar']/div[@class='control__bar__container']/div[@class='controls__container']/div[@class='control']/span[1]//*[name()='svg']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 133.0.6943.59, chrome: {chromedriverVersion: 133.0.6943.53 (9a80935019b0..., userDataDir: C:\Users\Dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55657}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55657/devtoo..., se:cdpVersion: 133.0.6943.59, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 82e7f39fe0f13d2bd179643cfebf6d87]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=133.0.6943.59)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [82e7f39fe0f13d2bd179643cfebf6d87, findElement {using=css selector, value=//body/div[@id='root']/div[@class='header__container']/div[@class='nav__top__container']/div[@class='top__container']/div[@class='control__bar']/div[@class='control__bar__container']/div[@class='controls__container']/div[@class='control']/span[1]//*[name()='svg']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 133.0.6943.59, chrome: {chromedriverVersion: 133.0.6943.53 (9a80935019b0..., userDataDir: C:\Users\Dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55657}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55657/devtoo..., se:cdpVersion: 133.0.6943.59, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 82e7f39fe0f13d2bd179643cfebf6d87
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.click(Unknown Source)
at pageObjects.CheckoutPage.setcheckout(CheckoutPage.java:22)
at testCases.CheckoutTest.testCheckoutProcess(CheckoutTest.java:12)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutProcess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.CheckoutTest@2638011]" started-at="2025-02-10T08:58:48 IST" name="tearDown" finished-at="2025-02-10T08:58:49 IST" duration-ms="853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.CheckoutTest -->
      <class name="testCases.AdvanceSearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.AdvanceSearchTest@7b02881e]" started-at="2025-02-10T08:57:58 IST" name="setup" finished-at="2025-02-10T08:58:10 IST" duration-ms="12477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_advancesearch()[pri:0, instance:testCases.AdvanceSearchTest@7b02881e]" started-at="2025-02-10T08:58:11 IST" name="verify_advancesearch" finished-at="2025-02-10T08:58:12 IST" duration-ms="1640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_advancesearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.AdvanceSearchTest@7b02881e]" started-at="2025-02-10T08:58:12 IST" name="tearDown" finished-at="2025-02-10T08:58:13 IST" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.AdvanceSearchTest -->
      <class name="testCases.CartTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.CartTest@6e509ffa]" started-at="2025-02-10T08:58:13 IST" name="setup" finished-at="2025-02-10T08:58:20 IST" duration-ms="7014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_cart_page()[pri:0, instance:testCases.CartTest@6e509ffa]" started-at="2025-02-10T08:58:20 IST" name="verify_cart_page" finished-at="2025-02-10T08:58:21 IST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_cart_page -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.CartTest@6e509ffa]" started-at="2025-02-10T08:58:21 IST" name="tearDown" finished-at="2025-02-10T08:58:22 IST" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.CartTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
